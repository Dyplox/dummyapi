tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

repositories {
    jcenter()
    mavenLocal()
    mavenCentral()
}

buildscript {
    repositories {
        mavenLocal()
        jcenter()
    }
    dependencies {
        classpath("net.serenity-bdd:serenity-gradle-plugin:2.0.81")
        classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:3.3"
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'net.serenity-bdd.aggregator'
apply plugin: "org.sonarqube"

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {

    testImplementation 'net.serenity-bdd:serenity-cucumber:3.3.9-RC3'
    testImplementation 'io.cucumber:cucumber-junit:4.2.0'
    //testImplementation 'io.cucumber:cucumber-picocontainer:7.11.1'
    //testImplementation 'org.assertj:assertj-core:3.24.2'
    testImplementation 'org.hamcrest:hamcrest:2.2'
    testImplementation 'io.rest-assured:rest-assured:5.3.0'
    testImplementation 'io.rest-assured:json-schema-validator:5.3.0'

    implementation 'net.serenity-bdd:serenity-screenplay-rest:3.3.9-RC3'
    implementation 'net.serenity-bdd:serenity-core:3.3.9-RC3'
    implementation 'io.cucumber:cucumber-java:4.2.0'
    implementation 'io.cucumber:cucumber-core:2.0.0'
    implementation('com.google.code.gson:gson:2.8.9')

    implementation("org.junit.platform:junit-platform-launcher:1.5.2")
    implementation("org.junit.jupiter:junit-jupiter-engine:5.5.2")
    //implementation("org.junit.vintage:junit-vintage-engine:5.5.2")
}

tasks.withType(Test) {
    useJUnit()
    ignoreFailures = true
    gradle.startParameter.continueOnFailure = true
    test.finalizedBy(aggregate)
}